# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Gradle Build, Test, and Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build:

    name: ${{ matrix.os }} / ${{ matrix.configuration }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        jdk-version: [ 17 ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:

      - uses: actions/checkout@v3

      - name: Set Up JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Gradle Build Jar
        run: ./gradlew clean build jar -Penv=prod-jar

      - name: Upload Jar
        uses: actions/upload-artifact@v3
        with:
          name: java-${{ jdk-version }}-${{ runner.os }}-jar
          path: build/libs/*-fx.jar
          retention-days: 1
          if-no-files-found: error

      - name: Gradle Build JLink Zip
        run: ./gradlew clean build jlinkZip -Penv=prod-jlink

      - name: Upload JLink Zip
        uses: actions/upload-artifact@v3
        with:
          name: java-${{ jdk-version }}-${{ runner.os }}-jlink-zip
          path: build/distributions/*.zip
          retention-days: 1
          if-no-files-found: error

      - name: Gradle Build JPackage
        run: ./gradlew clean build jpackage -Penv=prod-jlink

      - name: Upload JPackage
        uses: actions/upload-artifact@v3
        with:
          name: java-${{ jdk-version }}-${{ runner.os }}-dist
          path: build/jpackage/**
          retention-days: 1
          if-no-files-found: error
