# Apple Silicon Builds

name: Apple Silicon Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

permissions:
  contents: write

# cancel in progress jobs or runs for the current workflow
concurrency:
  group: arm-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:

  build-jpackage:

    name: arm_v8 / jlink / osx / ${{ matrix.jdk-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        jdk-version: [ 17 ]
        os: [ macos-latest ]

    steps:

      - uses: actions/checkout@v3

      - name: Set Up Packaging JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: 'temurin'
          architecture: aarch64
          mvn-toolchain-id: "temurin_${{ matrix.jdk-version }}_aarch64"

      # Second Step since we want this to be the default jdk when `java` is run
      - name: Set Up Build JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: 'temurin'
          mvn-toolchain-id: "temurin_${{ matrix.jdk-version }}_x64"

      - name: Extract JDK Download Paths
        run: |
          echo "java_home_x64=$(grep jdkHome $HOME/.m2/toolchains.xml | sed 's#.*<jdkHome>\(.*\)</jdkHome>.*#\1#' | sed 1d)" >> $GITHUB_ENV
          echo "java_home_arm64=$(grep jdkHome $HOME/.m2/toolchains.xml | sed 's#.*<jdkHome>\(.*\)</jdkHome>.*#\1#' | sed 2d)" >> $GITHUB_ENV

      - name: Gradle Build JLink
        uses: gradle/gradle-build-action@v2
        env:
          APPLE_SILICON: 1
          APPLE_SILICON_JAVA_HOME: ${{ env.java_home_arm64 }}
        with:
          arguments: clean jlink -Penv=prod-jlink

      - name: Package Application using Meson
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install meson==1.2.1 ninja==1.11.1
          cd packaging/osx_arm64
          bash build.sh

      - name: Upload App Zip
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: java-${{ matrix.jdk-version }}-osx-arm64-jpackage
          path: build/release/**
          retention-days: 10
          if-no-files-found: error

      - name: Release App
        if: github.event_name == 'release'
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          RELEASE_NAME: trinity-macOS-arm64-java-${{ matrix.jdk-version }}
        shell: bash
        run: |
          mv build/release/Trinity.app "Trinity.app"
          zip -r "$RELEASE_NAME-jpackage.zip" "Trinity.app"
          gh release upload "$GITHUB_REF_NAME" "$RELEASE_NAME-jpackage.zip"
